<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN"
 "task.dtd">
<task id="tjval" xml:lang="en-us">
<title outputclass="id_title">Validating code in enterprise applications</title>
<shortdesc outputclass="id_shortdesc">The workbench includes validators that
check certain files in your enterprise application module projects for errors.</shortdesc>
<prolog><metadata>
<keywords><indexterm>validation<indexterm>overview</indexterm></indexterm>
<indexterm>code validation<indexterm>overview</indexterm></indexterm><indexterm>validation<indexterm>automatic</indexterm></indexterm>
<indexterm>code validation<indexterm>automatic</indexterm></indexterm><indexterm>build
validation<indexterm>enabling</indexterm></indexterm><indexterm>validation<indexterm>build
validation</indexterm></indexterm></keywords>
</metadata></prolog>
<taskbody outputclass="id_taskbody">
<context outputclass="id_context"> <p outputclass="anchor_topictop"></p>
<p>By default, the workbench validates your files automatically after any build, including automatic builds. You
can also begin the validation process manually without building.</p><p>On
the workbench Properties window, you can enable or disable validators to be
used on your projects. Also, you can enable or disable validators for each
enterprise application module project individually on the Properties page
for that project.</p><p>Each validator can apply to certain types of files,
certain project natures, and certain project facets. When a validator applies
to a project facet or nature, the workbench uses that validator only on projects
that have that facet or nature. Likewise, most validators apply only to certain
types of files, so the workbench uses those validators only on those types
of files.</p><p>Follow these steps to validate your files:</p></context>
<steps outputclass="id_steps">
<step><cmd>Click <menucascade><uicontrol>Window</uicontrol><uicontrol>Preferences</uicontrol>
</menucascade>.</cmd></step>
<step><cmd>In the Preferences window, click <uicontrol>Validation</uicontrol> in
the left pane.</cmd><stepresult>The Validation page of the Preferences window
lists the validators available in your project and their settings.</stepresult>
</step>
<step><cmd>If you want to set individual validation settings for one or more
of your projects, select the <uicontrol>Allow projects to override these preference
settings</uicontrol> check box.</cmd></step>
<step><cmd>To prevent validation at the global level, select the <uicontrol>Suspend
all validators</uicontrol> check box.</cmd><info>If you select this check
box, you can still enable validation at the project level.</info></step>
<step><cmd>If you want to save any resources you have modified before the
validation begins, select the <uicontrol>Save all modified resources automatically
prior to validating</uicontrol> check box.</cmd></step>
<step><cmd>In the list of validators, select the check boxes next to each
validator you want to use at the global level.</cmd><info>Each validator has
a check box to specify whether it is used on manual validation or on build
validation.</info></step>
<step><cmd>Choose an alternate implementation for a validator by clicking
the button in the <uicontrol>Settings</uicontrol> column.</cmd><info>Not all
validators have alternate implementations.</info></step>
<step><cmd>Click <uicontrol>OK</uicontrol>.</cmd></step>
<step><cmd>If you want to set individual validation settings for one or more
of your projects, see <xref href="tjvalglobalpref.dita"></xref>.</cmd></step>
<step><cmd>Begin the validation process by one of the following methods:</cmd>
<choices>
<choice>Right-click a project and click <uicontrol>Run Validation</uicontrol>.</choice>
<choice>Start a build.</choice>
</choices>
</step>
</steps>
<result outputclass="id_result">Any errors found by the validators are listed
in the Problems view.</result>
<postreq outputclass="id_postreq"><p outputclass="anchor_topicbottom"></p></postreq>
</taskbody>
</task>
